###############################################################
# This file contains the verb definitions for broot
#
# Some verbs here are examples and not enabled by default: you
#  need to uncomment them if you want to use them.
#
# Documentation at https://dystroy.org/broot/verbs/
###############################################################

verbs: [
    # Editing
    {
        invocation: edit
        shortcut: e
        key: enter
        apply_to: text_file
        external: "$EDITOR {file}:{line}"
        working_dir: "{git-root}"
        leave_broot: false
    }

    # Panels
    {
        invocation: wc
        key: alt-d
        internal: ":close_panel_cancel"
    }

    #Staging
    {
        key: ctrl-s
        internal: ":toggle_stage"
    }

    #Git
    {
        invocation: show_diff
        shortcut: sd
        external: "git difftool -y {file}"
        working_dir: "{git-root}"
        leave_broot: false
    }
    {
        invocation: show_diff_panel
        shortcut: sdp
        external: "kitten diff {file} {other-panel-file}"
        from_shell: false
        working_dir: "{git-root}"
        leave_broot: false
        apply_to: file
    }
    {
        invocation: lazygit
        shortcut: lg
        external: "lazygit"
        from_shell: false
        working_dir: "{git-root}"
        leave_broot: false
    }

    #Navigation
    {
        keys: [
            alt-left
        ]
        internal: ":back"
    }
    {
        invocation: gr
        key: "ctrl-r"
        internal: ":focus {git-root}"
    }
    {
        invocation: gh
        key: "ctrl-h"
        internal: ":focus ~"
    }
    
    # File Management
    {
        name: touch
        invocation: touch {new_file}
        shortcut: tc
        execution: "touch {directory}/{new_file}"
        leave_broot: false
    }

    # Example 1: launching `tail -n` on the selected file (leaving broot)
    # {
    #     name: tail_lines
    #     invocation: tl {lines_count}
    #     execution: "tail -f -n {lines_count} {file}"
    # }



    # On ctrl-b, propose the creation of a copy of the selection.
    # While this might occasionally be useful, this verb is mostly here
    # as an example to demonstrate rare standard groups like {file-stem}
    # and {file-dot-extension} and the auto_exec verb property which
    # allows verbs to stay unexecuted until you hit enter
    # {
    #     invocation: "backup {version}"
    #     key: ctrl-b
    #     leave_broot: false
    #     auto_exec: false
    #     execution: "cp -r {file} {parent}/{file-stem}-{version}{file-dot-extension}"
    # }

    # By default, `rm` does the system rm, and completely removes
    # the file. If you prefer to have the file moved to the system
    # trash, you may use the ':trash' internal with the verb below:
    # {
    #     invocation: "rm"
    #     internal: "trash"
    #     leave_broot: false
    # }

    # This verb lets you launch a terminal on ctrl-T
    # (on exit you'll be back in broot)
    {
        invocation: terminal
        key: ctrl-t
        execution: "$SHELL"
        set_working_dir: true
        leave_broot: false
    }

    # Here's an example of a verb needing the shell capabilities.
    # It copies all children of the currently selected directory
    #  to a destination you type.
    # It uses a star, which needs the shell for expansion. That's
    #  why such verb must have the `from_shell: true` parameter.
    # {
    #     invocation: "cpa {dest}"
    #     external: "cp -r {directory}/* {dest}"
    #     from_shell: true
    # }

    # Here's an example of a shortcut bringing you to your home directory
    # {
    #     invocation: home
    #     key: ctrl-home
    #     execution: ":focus ~"
    # }



    # A popular set of shortcuts for going up and down:
    #
    # {
    #     key: ctrl-k
    #     execution: ":line_up"
    # }
    # {
    #     key: ctrl-j
    #     execution: ":line_down"
    # }
    # {
    #     key: ctrl-u
    #     execution: ":page_up"
    # }
    # {
    #     key: ctrl-d
    #     execution: ":page_down"
    # }

    # If you develop using git, you might like to often switch
    # to the git status filter:
    # {
    #     key: alt-g
    #     execution: ":toggle_git_status"
    # }

    # You can reproduce the bindings of Norton Commander
    # on copying or moving to the other panel:
    # {
    #     key: F5
    #     external: "cp -r {file} {other-panel-directory}"
    #     leave_broot: false
    # }
    # {
    #     key: F6
    #     external: "mv {file} {other-panel-directory}"
    #     leave_broot: false
    # }
]

